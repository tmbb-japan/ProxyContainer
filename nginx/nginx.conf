worker_processes auto;

events {
  worker_connections 2048;
}

http {
  log_format main '$http_x_forwarded_for - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent"';
  access_log /var/log/nginx/access.log main;

  # Define a rate limit zone
  limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;

  upstream backend_servers {
    least_conn;
    server backend1:3001;
    server backend2:3002;
    server backend3:3003;
  }

  server {
      listen 80;
      server_name localhost;

      #Redirect HTTP requests to HTTPS
      return 301 https://$host$request_uri;
  }
  server {
      listen 443 ssl;
      server_name localhost;

      ssl_certificate /etc/nginx/ssl/cert.pem;
      ssl_certificate_key /etc/nginx/ssl/key.pem;

      # SSL/TLS settings
      ssl_protocols TLSv1.2 TLSv1.3;
      ssl_ciphers HIGH:!aNULL:!MD5;
      ssl_prefer_server_ciphers on;

      # Security Header Settings (Optional)
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

      # Define a location for the custom error page
      location /blocked {
        alias /usr/share/nginx/html/error.html;
      }

      location / {
          # Block specific IP addresses
          deny 153.114.202.104;
          deny 153.114.202.104/24;
          
          # Apply rate limiting
          limit_req zone=one burst=5 nodelay;

          # Redirect to custom error page on access denied
          error_page 403 /blocked;

          proxy_pass http://backend_servers;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }
  }
}